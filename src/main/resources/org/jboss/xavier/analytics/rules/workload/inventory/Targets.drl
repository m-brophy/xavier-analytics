package org.jboss.xavier.analytics.rules.workload.inventory;

import org.jboss.xavier.analytics.pojo.output.workload.inventory.WorkloadInventoryReportModel
import java.util.HashSet;
import org.jboss.xavier.analytics.functions.HelperFunctions

import function org.jboss.xavier.analytics.functions.HelperFunctions.isSupportedOS;
import function org.jboss.xavier.analytics.functions.HelperFunctions.isUnsupportedOS;
import function org.jboss.xavier.analytics.functions.HelperFunctions.isUnsuitableFlag;
import function org.jboss.xavier.analytics.functions.HelperFunctions.isConvertibleOS;
import function org.jboss.xavier.analytics.functions.HelperFunctions.isUndetectedOS;

dialect "java"
agenda-group "Targets"
lock-on-active true
auto-focus false

function boolean flagsSuitableForOSP(WorkloadInventoryReportModel report)
{
    return report.getFlagsIMS().stream().noneMatch(flag -> isUnsuitableFlag(flag));
}

rule "Target_RHV"
    when
        workloadInventoryReport : WorkloadInventoryReportModel(
            osDescription != null,
            eval(isSupportedOS(osDescription) || isConvertibleOS(osDescription))
        )
    then
        modify(workloadInventoryReport)
        {
            addRecommendedTargetsIMS("RHV")
        }
end

rule "Target_OSP"
    when
        workloadInventoryReport : WorkloadInventoryReportModel(
            osDescription != null,
            flagsIMS == null || eval(flagsIMS != null && flagsSuitableForOSP(this)),
            eval(isSupportedOS(osDescription) || isConvertibleOS(osDescription))
        )
    then
        modify(workloadInventoryReport)
        {
            addRecommendedTargetsIMS("OSP")
        }
end

rule "Target_Convert2RHEL"
    when
        workloadInventoryReport : WorkloadInventoryReportModel(
            osDescription != null,
            osDescription.toLowerCase().contains(HelperFunctions.OSSupport.CENTOS.getName().toLowerCase()) ||
            osDescription.toLowerCase().contains(HelperFunctions.OSSupport.ORACLE.getName().toLowerCase())
        )
    then
        modify(workloadInventoryReport)
        {
            addRecommendedTargetsIMS("Convert2RHEL")
        }
end

rule "Target_None"
    when
        workloadInventoryReport : WorkloadInventoryReportModel(
            eval((osDescription != null && isUnsupportedOS(osDescription)) || isUndetectedOS(osDescription))
        )
    then
        modify(workloadInventoryReport)
        {
            addRecommendedTargetsIMS("None")
        }
end
