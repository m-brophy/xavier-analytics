package org.jboss.xavier.analytics.rules.workload.inventory;

import org.jboss.xavier.analytics.pojo.output.workload.inventory.WorkloadInventoryReportModel
import java.util.HashSet;
import org.jboss.xavier.analytics.functions.HelperFunctions;

import function org.jboss.xavier.analytics.functions.HelperFunctions.isSupportedOS;
import function org.jboss.xavier.analytics.functions.HelperFunctions.isUnsupportedOS;
import function org.jboss.xavier.analytics.functions.HelperFunctions.isFlagUnsuitableForOSP;
import function org.jboss.xavier.analytics.functions.HelperFunctions.isFlagUnsuitableForOCP;
import function org.jboss.xavier.analytics.functions.HelperFunctions.isConvertibleOS;
import function org.jboss.xavier.analytics.functions.HelperFunctions.isUndetectedOS;

dialect "java"
agenda-group "Targets"
lock-on-active true
auto-focus false

function boolean flagsSuitableForOSP(WorkloadInventoryReportModel report)
{
    return report.getFlagsIMS().stream().noneMatch(flag -> isFlagUnsuitableForOSP(flag));
}

function boolean flagsSuitableForOCP(WorkloadInventoryReportModel report)
{
    return report.getFlagsIMS().stream().noneMatch(flag -> isFlagUnsuitableForOCP(flag));
}

rule "Target_None"
    salience -1
    when
        workloadInventoryReport : WorkloadInventoryReportModel(
            eval( recommendedTargetsIMS == null || recommendedTargetsIMS.isEmpty())
        )
    then
        modify(workloadInventoryReport)
        {
            addRecommendedTargetsIMS("None")
        }
end

rule "Target_RHV"
    when
        workloadInventoryReport : WorkloadInventoryReportModel(
            workloadInventoryReport.getOsDescription() != null,
            eval(isSupportedOS(workloadInventoryReport.getOsDescription()) || isConvertibleOS(workloadInventoryReport.getOsDescription()))
        )
    then
        modify(workloadInventoryReport)
        {
            addRecommendedTargetsIMS(WorkloadInventoryReportModel.TARGET_RHV)
        }
end

rule "Target_OSP"
    when
        workloadInventoryReport : WorkloadInventoryReportModel(
            osDescription != null,
            flagsIMS == null || eval(flagsIMS != null && flagsSuitableForOSP(this)),
            eval(isSupportedOS(osDescription) || isConvertibleOS(osDescription))
        )
    then
        modify(workloadInventoryReport)
        {
            addRecommendedTargetsIMS(WorkloadInventoryReportModel.TARGET_OSP)
        }
end

rule "Target_RHEL"
    when
        workloadInventoryReport : WorkloadInventoryReportModel(
            osDescription != null,
            osDescription.toLowerCase().contains(HelperFunctions.OSSupport.CENTOS.getName().toLowerCase()) ||
            osDescription.toLowerCase().contains(HelperFunctions.OSSupport.ORACLE.getName().toLowerCase())
        )
    then
        modify(workloadInventoryReport)
        {
            addRecommendedTargetsIMS(WorkloadInventoryReportModel.TARGET_RHEL)
        }
end

rule "Target_OCP"
    when
        workloadInventoryReport : WorkloadInventoryReportModel(
            osDescription != null,
            osDescription.toLowerCase().contains(HelperFunctions.OSSupport.RHEL.getName().toLowerCase()) ||
            osDescription.toLowerCase().contains(HelperFunctions.OSSupport.WINDOWS.getName().toLowerCase()),
            flagsIMS == null || eval(flagsIMS != null && flagsSuitableForOCP(this)),
            isSupportedOS(osDescription)
        )
    then
        modify(workloadInventoryReport)
        {
            addRecommendedTargetsIMS(WorkloadInventoryReportModel.TARGET_OCP)
        }
end

rule "Target_OpenJDK"
    when
        workloadInventoryReport : WorkloadInventoryReportModel(
            workloads != null,
            osFamily != null,
            eval(osFamily == "RHEL" || osFamily == "CentOS" || osFamily == "Windows Server" || osFamily == "Windows Other"),
            workloads contains "Oracle JDK 8" || workloads contains "Oracle JDK 11",
            workloads not contains "Oracle Weblogic"
        )
    then
        modify(workloadInventoryReport)
        {
            addRecommendedTargetsIMS("OpenJDK")
        }
end

rule "Target_RedHatJBossEAP"
    when
        workloadInventoryReport : WorkloadInventoryReportModel(
            workloads != null,
            workloads contains "Oracle Weblogic" || workloads contains "IBM Websphere App Server"
        )
    then
        modify(workloadInventoryReport)
        {
            addRecommendedTargetsIMS("Red Hat JBoss EAP")
        }
end
